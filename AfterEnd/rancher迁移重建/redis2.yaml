cluster:
  externalAccess:
    enabled: false
    service:
      annotations: {}
      loadBalancerIP: []
      loadBalancerSourceRanges: []
      port: 6379
      type: LoadBalancer
  init: true
  nodes: 8
  replicas: 1
  update:
    addNodes: true
    currentNumberOfNodes: 8
    currentNumberOfReplicas: 1
    newExternalIPs: []
clusterDomain: cluster.local
commonAnnotations: {}
commonLabels: {}
containerSecurityContext:
  enabled: true
  runAsNonRoot: true
  runAsUser: 1001
diagnosticMode:
  args:
    - infinity
  command:
    - sleep
  enabled: false
existingSecret: ''
existingSecretPasswordKey: ''
extraDeploy: []
fullnameOverride: ''
global:
  imagePullSecrets: []
  imageRegistry: ''
  redis:
    password: ''
  storageClass: managed-nfs-storage
image:
  debug: false
  digest: ''
  pullPolicy: IfNotPresent
  pullSecrets: []
  registry: docker.io
  repository: bitnami/redis-cluster
  tag: 7.0.11-debian-11-r12
maxUnavailable: ''
metrics:
  containerSecurityContext:
    allowPrivilegeEscalation: false
    enabled: false
  enabled: false
  extraArgs: {}
  extraEnvVars: []
  image:
    digest: ''
    pullPolicy: IfNotPresent
    pullSecrets: []
    registry: docker.io
    repository: bitnami/redis-exporter
    tag: 1.50.0-debian-11-r13
  podAnnotations:
    prometheus.io/port: '9121'
    prometheus.io/scrape: 'true'
  podLabels: {}
  priorityClassName: ''
  prometheusRule:
    additionalLabels: {}
    enabled: false
    namespace: ''
    rules: []
  resources: {}
  service:
    annotations: {}
    clusterIP: ''
    labels: {}
    loadBalancerIP: ''
    type: ClusterIP
  serviceMonitor:
    annotations: {}
    enabled: false
    interval: ''
    jobLabel: ''
    labels: {}
    metricRelabelings: []
    namespace: ''
    relabelings: []
    scrapeTimeout: ''
    selector: {}
minAvailable: ''
nameOverride: ''
networkPolicy:
  allowExternal: true
  enabled: false
  ingressNSMatchLabels: {}
  ingressNSPodMatchLabels: {}
password: '${REDIS_PASSWORD}'
persistence:
  accessModes:
    - ReadWriteOnce
  annotations: {}
  enabled: true
  matchExpressions: {}
  matchLabels: {}
  path: /bitnami/redis/data
  size: 8Gi
  storageClass: ''
  subPath: ''
podDisruptionBudget: {}
podSecurityContext:
  enabled: true
  fsGroup: 1001
  runAsUser: 1001
  sysctls: []
podSecurityPolicy:
  create: false
rbac:
  create: false
  role:
    rules: []
redis:
  affinity: {}
  args: []
  command: []
  configmap: ''
  containerPorts:
    bus: 16379
    redis: 6379
  customLivenessProbe: {}
  customReadinessProbe: {}
  customStartupProbe: {}
  defaultConfigOverride: ''
  extraEnvVars: []
  extraEnvVarsCM: ''
  extraEnvVarsSecret: ''
  extraVolumeMounts: []
  extraVolumes: []
  hostAliases: []
  hostNetwork: false
  initContainers: []
  lifecycleHooks: {}
  livenessProbe:
    enabled: true
    failureThreshold: 5
    initialDelaySeconds: 5
    periodSeconds: 5
    successThreshold: 1
    timeoutSeconds: 5
  nodeAffinityPreset:
    key: ''
    type: ''
    values: []
  nodeSelector: {}
  podAffinityPreset: ''
  podAnnotations: {}
  podAntiAffinityPreset: soft
  podLabels: {}
  podManagementPolicy: Parallel
  priorityClassName: ''
  readinessProbe:
    enabled: true
    failureThreshold: 5
    initialDelaySeconds: 5
    periodSeconds: 5
    successThreshold: 1
    timeoutSeconds: 1
  resources:
    limits: {}
    requests: {}
  schedulerName: ''
  shareProcessNamespace: false
  sidecars: []
  startupProbe:
    enabled: false
    failureThreshold: 6
    initialDelaySeconds: 300
    path: /
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  tolerations: []
  topologySpreadConstraints: []
  updateStrategy:
    rollingUpdate:
      partition: 0
    type: RollingUpdate
  useAOFPersistence: 'yes'
service:
  annotations: {}
  clusterIP: ''
  externalTrafficPolicy: Cluster
  extraPorts: []
  headless:
    annotations: {}
  labels: {}
  loadBalancerIP: ''
  loadBalancerSourceRanges: []
  nodePorts:
    redis: ''
  ports:
    redis: 6379
  sessionAffinity: None
  sessionAffinityConfig: {}
  type: ClusterIP
serviceAccount:
  annotations: {}
  automountServiceAccountToken: false
  create: false
  name: ''
sysctlImage:
  command: []
  containerSecurityContext:
    enabled: true
    privileged: true
    runAsUser: 0
  digest: ''
  enabled: false
  mountHostSys: false
  pullPolicy: IfNotPresent
  pullSecrets: []
  registry: docker.io
  repository: bitnami/bitnami-shell
  resources:
    limits: {}
    requests: {}
  tag: 11-debian-11-r118
tls:
  authClients: true
  autoGenerated: false
  certCAFilename: ''
  certFilename: ''
  certKeyFilename: ''
  certificatesSecret: ''
  dhParamsFilename: ''
  enabled: false
  existingSecret: ''
updateJob:
  activeDeadlineSeconds: 600
  affinity: {}
  annotations: {}
  args: []
  command: []
  extraEnvVars: []
  extraEnvVarsCM: ''
  extraEnvVarsSecret: ''
  extraVolumeMounts: []
  extraVolumes: []
  hostAliases: []
  initContainers: []
  nodeAffinityPreset:
    key: ''
    type: ''
    values: []
  nodeSelector: {}
  podAffinityPreset: ''
  podAnnotations: {}
  podAntiAffinityPreset: soft
  podLabels: {}
  priorityClassName: ''
  resources:
    limits: {}
    requests: {}
  tolerations: []
usePassword: false
usePasswordFile: false
volumePermissions:
  containerSecurityContext:
    enabled: true
    privileged: false
    runAsUser: 0
  enabled: false
  image:
    digest: ''
    pullPolicy: IfNotPresent
    pullSecrets: []
    registry: docker.io
    repository: bitnami/bitnami-shell
    tag: 11-debian-11-r118
  resources:
    limits: {}
    requests: {}
