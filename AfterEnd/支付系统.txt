*使用支付框架步骤：
  1、从lilishop-uniapp项目入手，找到jz-boot项目的下单接口CashierController#payment，了解基本流程和概念（即下述的“支付总体逻辑、交易类型、支付终端类型、PayParam参数、CashierParam参数等”）
  2、将lilishop-uniapp相关支付页面借鉴摘抄到自己业务逻辑
  3、下载jz-boot项目的v1.1.0.pay-clean标签版本，将在业务项目中引入jeecg-module-payment-buyer项目，前端项目即可访问到相关下单接口
  4、jz-boot项目的v1.1.0.pay-clean标签版本只做了lilishop无关业务的清除，并未实现如交易类型为CONTRACT合同的具体一些实现（如参数解析等）及自己的业务逻辑，具体可参考ORDER交易类型的实现。
       这些业务逻辑的嵌入，可以运行起来后通过边调试，边补充的方式去完善。

*lilishop的支付似乎也是参考https://gitee.com/javen205/IJPay 项目

*其它支付相关项目 https://www.jeequan.com/demo/jeepay_cashier.html

*微信文档 
 服务商文档 https://pay.weixin.qq.com/wiki/doc/apiv3_partner/open/pay/chapter2_6_2.shtml
 商户文档 https://pay.weixin.qq.com/wiki/doc/apiv3/apis/chapter3_3_1.shtml

*抽出改造lilishop的支付模块

*lilishop的sql脚本

*jz-boot项目中有个【v1.1.0-payment-base】tag版本是摘出lilishop的完整支付系统（但是业务耦合性太强）



*微信h5支付接口中，/v3/pay/transactions/h5和/v3/pay/partner/transactions/h5 有什么区别？
 前者是商户用的，后者是给服务商用的

*支付总体逻辑
 以微信支付为例：
      1、用户在界面调用后端统一下单接口，后端调用微信平台统一下单接口，返回下单标识（h5支付是一个301链接，JsAPI是一个prepay_id及签名等），返回给用户
      2、用户拿到下单标识唤起微信的收银台（h5是打开一个中间页面、JsAPI是代码直接调用唤起微信客户端），并进行支付
      3、微信平台会在用户支付成功后，调用后端接口将支付结果给到后端。 
      4、在第2步时，如果是h5支付，则会开启一个定时器请求后端获取结果。 如果是JsAPI会在调用后回调里跳转到指定页面。
      注意：微信公众号的JsAPI和小程序或APP支付差不多，只是在前端处，前者用WeixinJSBridge.invoke()唤起微信收银台，后两者者用uni.requestPayment()唤起微信收银台

*退款总体逻辑
 以微信退款为例：
      1、用户在界面申请退货退款等（隶属于buyer买家项目）
      2、商家在管理界面同意退货退款申请（隶属于manager卖家项目），携带原先支付成功通知的相关参数去请求微信退款接口。  
      3、微信退款成功通知到买家（调用后端退款通知接口）
      注意：支付退款系统中，manager卖家项目只涉及退款相关功能，这部分是否有必要再单独抽出项目

*交易类型（用CashierEnum枚举类区分） ：不同交易类型的支付参数计算方式不同，但最终都是生成支付金额等参数
    ORDER：单个订单，相当于单个商品，当进入待付款界面，就只能一个个商品单独付款。下单时就创建一条Order数据表记录
    TRADE：整单交易，其实就是多个商品合并支付，当在购物车多个商品一起结算时就是这个类型。在购物车合并支付时，会先创建一条Trade记录和n条关联的Order记录
    RECHARGE：充值，给账户充值

*支付终端类型（用ClientTypeEnum枚举类区分）
    H5("移动端"),
    PC("PC端"), 
    WECHAT_MP("小程序端"),
    APP("移动应用端"),
    UNKNOWN("未知");

*前端传给后端的支付参数PayParam 包含交易类型、订单号、支付终端类型

*后端根据PayParam生成的支付参数CashierParam（也可称之为收银台参数）：包含返回给用户的参数和给微信支付接口的参数，前后端都会用到。

*lilishop支付+jeecgboot整合
 1、framework的pom.xml里删除合jeecg-core的pom.xml重复的，安装测试
 2、mybatisplus的service合mapping等改造成jeecg的标准，相关类删除
 3、redis、es、oss等中间件使用jeecg标准

LoginUser sysUser = (LoginUser) SecurityUtils.getSubject().getPrincipal();//cny_add

*lilishop相关功能点启发
  ？@SystemLogPoint 系统日志拦截 jeecg怎么处理
  ？@PreventDuplicateSubmissions 防重复提交 jeecg怎么处理
  ？在GlobalControllerExceptionHandler的@RestControllerAdvice注解
  ？@Phone，对比看下jeecg是如何做后端实体校验，如用户电话校验
 